// <auto-generated />
using System;
using GamingGroupFinderDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace _410project.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230425021849_Tables")]
    partial class Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventDBUserDB", b =>
                {
                    b.Property<int>("EventsAttendingEventDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UsersAttendingUserDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EventsAttendingEventDBId", "UsersAttendingUserDBId");

                    b.HasIndex("UsersAttendingUserDBId");

                    b.ToTable("EventDBUserDB");
                });

            modelBuilder.Entity("GameDBPlatformDB", b =>
                {
                    b.Property<int>("GamesGameDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PlatformsPlatformDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("GamesGameDBId", "PlatformsPlatformDBId");

                    b.HasIndex("PlatformsPlatformDBId");

                    b.ToTable("GameDBPlatformDB");
                });

            modelBuilder.Entity("GameDBProfileDB", b =>
                {
                    b.Property<int>("GamesGameDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProfilesProfileDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("GamesGameDBId", "ProfilesProfileDBId");

                    b.HasIndex("ProfilesProfileDBId");

                    b.ToTable("GameDBProfileDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.EventDB", b =>
                {
                    b.Property<int>("EventDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventDBId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("GameId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MaxRankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("MinRankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PlatformId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("EventDBId");

                    b.HasIndex("GameId");

                    b.HasIndex("MaxRankId");

                    b.HasIndex("MinRankId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PlatformId");

                    b.ToTable("EventsDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.GameDB", b =>
                {
                    b.Property<int>("GameDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameDBId"));

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("GameDBId");

                    b.ToTable("GamesDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.GameDBRankDB", b =>
                {
                    b.Property<int>("GameDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RankDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasIndex("GameDBId");

                    b.HasIndex("RankDBId");

                    b.ToTable("GamesDBRanksDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.InterestDB", b =>
                {
                    b.Property<int>("InterestDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestDBId"));

                    b.Property<string>("InterestName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("InterestDBId");

                    b.ToTable("InterestsDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.MessageDB", b =>
                {
                    b.Property<int>("MessageDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageDBId"));

                    b.Property<bool>("IsSeen")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SenderId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("MessageDBId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("MessagesDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.PlatformDB", b =>
                {
                    b.Property<int>("PlatformDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformDBId"));

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("PlatformDBId");

                    b.ToTable("PlatformsDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.ProfileDB", b =>
                {
                    b.Property<int>("ProfileDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileDBId"));

                    b.Property<int>("Age")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Pronouns")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ProfileDBId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilesDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.RankDB", b =>
                {
                    b.Property<int>("RankDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankDBId"));

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RankValue")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RankDBId");

                    b.ToTable("RanksDB");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.UserDB", b =>
                {
                    b.Property<int>("UserDBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDBId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserDBId");

                    b.ToTable("UsersDB");
                });

            modelBuilder.Entity("InterestDBProfileDB", b =>
                {
                    b.Property<int>("InterestsInterestDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProfilesProfileDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("InterestsInterestDBId", "ProfilesProfileDBId");

                    b.HasIndex("ProfilesProfileDBId");

                    b.ToTable("InterestDBProfileDB");
                });

            modelBuilder.Entity("PlatformDBProfileDB", b =>
                {
                    b.Property<int>("PlatformsPlatformDBId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProfilesProfileDBId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PlatformsPlatformDBId", "ProfilesProfileDBId");

                    b.HasIndex("ProfilesProfileDBId");

                    b.ToTable("PlatformDBProfileDB");
                });

            modelBuilder.Entity("EventDBUserDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.EventDB", null)
                        .WithMany()
                        .HasForeignKey("EventsAttendingEventDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.UserDB", null)
                        .WithMany()
                        .HasForeignKey("UsersAttendingUserDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameDBPlatformDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.GameDB", null)
                        .WithMany()
                        .HasForeignKey("GamesGameDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.PlatformDB", null)
                        .WithMany()
                        .HasForeignKey("PlatformsPlatformDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameDBProfileDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.GameDB", null)
                        .WithMany()
                        .HasForeignKey("GamesGameDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.ProfileDB", null)
                        .WithMany()
                        .HasForeignKey("ProfilesProfileDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.EventDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.GameDB", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.RankDB", "MaxRank")
                        .WithMany()
                        .HasForeignKey("MaxRankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.RankDB", "MinRank")
                        .WithMany()
                        .HasForeignKey("MinRankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.UserDB", "Owner")
                        .WithMany("EventsOwned")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.PlatformDB", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("MaxRank");

                    b.Navigation("MinRank");

                    b.Navigation("Owner");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.GameDBRankDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.GameDB", "Game")
                        .WithMany()
                        .HasForeignKey("GameDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.RankDB", "Rank")
                        .WithMany()
                        .HasForeignKey("RankDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.MessageDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.UserDB", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.UserDB", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.ProfileDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.UserDB", "User")
                        .WithOne("Profile")
                        .HasForeignKey("GamingGroupFinderDatabase.ProfileDB", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InterestDBProfileDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.InterestDB", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.ProfileDB", null)
                        .WithMany()
                        .HasForeignKey("ProfilesProfileDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatformDBProfileDB", b =>
                {
                    b.HasOne("GamingGroupFinderDatabase.PlatformDB", null)
                        .WithMany()
                        .HasForeignKey("PlatformsPlatformDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamingGroupFinderDatabase.ProfileDB", null)
                        .WithMany()
                        .HasForeignKey("ProfilesProfileDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamingGroupFinderDatabase.UserDB", b =>
                {
                    b.Navigation("EventsOwned");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
